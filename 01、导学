01、技术栈
  --vue+django前后端分离技巧
  --彻底玩转restful api开发流程
  --django功能实现及核心源码分析
  --sentry线上系统的错误日志监控和警告
  --第三方登录和支付宝集成
  --本地调试远程服务器技巧
  
02、课程组成
  --vue前端项目
  --django 系统实现前台功能
  --xadmin后台管理系统
  
03、django rest framework技能
  --apiview的方式实现api
  --genericview的方式实现api接口
  --viewset和router方式实现api接口和url配置
  --django_filter、search_filter、分页
  --通用mixins
  
04、权限和认证
  --authentication用户认证设置
  --动态设置permission、authentication
  --validators实现字段验证
  
05、序列化和表单验证
  --serializer
  --modelserializer
  --动态设置serializer
  
06、支付、登录和注册
  --json web token实现登录
  --手机注册
  --支付宝支付
  --第三方登录
  
07、进阶
  --核心源码解读
  --文档自动化管理
  --django framework缓存
  --throttling对用户和ip进行限速
  
08、日常开发问题
  --本地不能重现的bug
  --api接口出错不能及时发现或找不到错误栈
  --api文档管理
  --大量url配置导致难以管理
  --接口不及时更新文档导致不知道如何去测试，但写文档会花费大量时间
  --为防止爬虫需要限制对api访问频率
  --某些数据需要放入缓存，加速api访问速度，比如商品数据变动比较小可以放入缓存
  
09、常见问题解决方案
  --pycharm远程服务器代码调试技巧，用于调试远程服务器代码和重现线上bug
  --搭建docker的sentry体验错误监控系统，在发生错误时收到邮件通知
  --通过django framework的文档自动化管理及url注册管理功能节约写文档时间
  --django framework的文档自动化管理还可以让我们直接在文档里面测试接口、自动生成js接口代码、shell测试代码和python测试代码
  --django提供throttle来对api进行频率访问限制
  --引入第三方框架设置api的缓存
  
10、django进阶知识点
  --django migrations原理
  --django信号量
  --django从请求到响应的完整过程
  --独立使用django的model
  
11、vue知识点
  --vue技术选型
  --vue代码结构分析
  --api后端接口填充到vue组件模板
  
12、技术储备要求
  --django基础储备知识
  --python语法
  --了解vue
  --mysql基础语法
  
