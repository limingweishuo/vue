01、django rest framework安装
  --这里新知识django和django test framework不一样
  --pip install djangorestframework
  --pip install markdown django-filter
  
02、初始化项目
  --django-admin startproject MxShop
  --cd MxShop
  --django-admin startapp user
  --mkdir templates
  --python manage.py runserver  自动创建项目服务器，这个过程会初始化数据库db.sqlite3
  --python manage.py dbshell  打开本项目的db.sqlite3数据库 | 使用sqlite3 db.sqlite3也可打开该数据库
    [这两个命令的使用都需要安装sqlite并配置环境变量]
  --配置数据库，setting.py文件中修改代码
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    } 
    改为：
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            # 数据库创建--判断原来不存在，则创建数据库，并指定编码格式和校验集
            # create database if not exists 数据库名称 default character set utf8 collate utf8_general_ci;
            'NAME': 'MxShop',  # 这里数据库必须提前创建，命令是
            'HOST': '127.0.0.1',
            'USER': 'root',
            'PASSWORD': '**********',  #不怕密码泄露，反正你也打不开
            'PORT': '3306',
            'options': {'init_command': 'SET storage_engine=INNODB'}  # 设置驱动
        }
    }
    
    

03、mysql忘记密码设置
  --当前cmd中net stop mysql
  --mysqld --console --skip-grant-tables --shared-memory
  --再打开一个新的cmd，无密码登录MySQL，输入登录命令：mysql -u root -p
  --输入命令:use mysql;
            update user set authentication_string='' where user='root';
            quit;
  --关闭以-console --skip-grant-tables --shared-memory 启动的MySQL服务
  --net start mysql  启动MySQL服务，一管理员的身份运行cmd
  --输入mysql -u root -p
  --ALTER USER 'root'@'localhost' IDENTIFIED BY '新密码';
  --quit;
  --重新登陆：mysql -u root -p
  --输入密码即可
  
04、数据库驱动安装
  --配置并创建数据库之后，直接运行项目会出错，需要安装驱动
  --安装pymysql
  --在项目根目录下__init__.py中加入
    import pymysql
    pymysql.install_as_MySQLdb()
  
  --这里辅助安装了pillow，和数据库没有关系不过和项目图片处理相关
  
05、项目结构的设计
  --创建apps文件夹，将第一个app名为user的文件夹拖入该文件夹中，这里apps用于存放所有app模块
  --创建extra_apps->文件夹右击->Mark Directory as->Sources Root，如果有别的直接拿过来的功能模块可以放在这里，方便区别和修改功能
  --创建templates，这里已经由项目自动创建
  --创建media，存放多媒体资源文件
  --创建db_tools
  
06、多级app使用时，相关路径配置
  --由于apps 和 extra_apps文件夹不是原生模块app，需要添加文件路径到settings.py中方便我们后续导包和使用
  --sys.path.insert(0, BASE_DIR)
  --sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))
  --sys.path.insert(0, os.path.join(BASE_DIR, 'extra_apps'))
  
07、这里使用navicat进行数据库可视化连接，下面几节讲的就是数据表创建  
